name: Build Docker Images

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run numbers
        run: |
          echo -e " RunId: $GITHUB_RUN_ID \n RunAttempt: $GITHUB_RUN_ATTEMPT \n RunNumber: $GITHUB_RUN_NUMBER"
        
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
          
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          # Note: tags has to be all lower-case
          tags: |
            ghcr.io/traktuner/bzdownloader-wine-container:latest            
            ghcr.io/traktuner/bzdownloader-wine-container:v1.${{ github.run_number }}.${{ github.run_attempt }}
            langstadlinger/bzdownloader-wine-container:latest
            langstadlinger/bzdownloader-wine-container:v1.${{ github.run_number }}.${{ github.run_attempt }}
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/master' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
